.module "main"

.import "system"
.import "system.algorithms"

.mangler "enable"

declare public struct List
    [int(8)] size
    
    .* Implicit struct; similar to a COBOL field containing subfields.
    .* Has a capacity of twenty elements.
    [struct(20)] element
    begin
        [string(10)] first-name
        [string(10)] last-name
    end
end

.* This procedure returns a new List with a single item
declare public [List]::init-list()
    declare [List]list : init [List]
    declare [int(8)]localSize : 1

    declare [string]first-name : "John"

    list::size : localSize
    list::element(0) : declare anon
        first-name
        last-name : "Doe"
    end

    ret list
end

declare private [void]::add-child-to-list([List*] list, [string(20)] first-name, [string(20)] last-name)
    list::element(list::size) : declare anon
        first-name
        last-name
    end

    .* increment list::size
end

declare public [uint(4)]::main()
    print "OSCLAN example"

    declare [List]list : call init-list()
    call add-child-to-list(*list, "Jane", "Doe")

    .*if list::size ~= 1 then
    .*    print "Something went wrong."
    .*end

    .* Fetch data from JSON endpoint (currently out-of-scope)
    .*declare [SomeStruct]data, [string(50)]error : fetch "https://some-website/api/some-endpoint.json"

    .*if error::message ~= space then
    .*    print "Unable to reach endpoint"
    .*    ret -1
    .*end

    ret ok
end
